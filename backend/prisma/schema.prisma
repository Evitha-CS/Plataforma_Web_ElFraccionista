// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model Partida {
  id                 Int      @id @default(autoincrement())
  nombreGanador      String   // Nombre del ganador (jugador) de la partida
  tiempoDuracion     String      // Tiempo que dur贸 la partida en segundos
  equivocacionesJugador1 Int   // Veces que se equivoc贸 el jugador 1
  equivocacionesJugador2 Int   // Veces que se equivoc贸 el jugador 2
  movimientosJugador1 Int       // Cantidad de movimientos del jugador 1
  movimientosJugador2 Int       // Cantidad de movimientos del jugador 2
  createdAt          DateTime @default(now())
  
  // Relaciones
  jugador1           User     @relation("PartidaJugador1", fields: [jugador1Id], references: [id])
  jugador1Id         Int
  jugador2           User     @relation("PartidaJugador2", fields: [jugador2Id], references: [id])
  jugador2Id         Int
}

model Salavirtual {
  id                 Int      @id @default(autoincrement())
  nombreSala      String   // Nombre de la sala creada
  createdAt          DateTime @default(now())

  // Relaciones
  usuario1           User?     @relation("SalaUsuario1", fields: [usuario1Id], references: [id])
  usuario1Id         Int?
  usuario2           User?     @relation("SalaUsuario2", fields: [usuario2Id], references: [id])
  usuario2Id         Int?
}

model User {
  id           Int      @id @default(autoincrement())
  registeredAt DateTime @default(now())
  email        String   @unique
  nombre       String
  password     String
  region       Region?   @relation(fields: [regionId], references: [id])
  regionId     Int?
  ciudad       Ciudad?   @relation(fields: [ciudadId], references: [id])
  ciudadId     Int?
  telefono     String?
  isPlaying    Boolean   @default(false) // Nuevo atributo
  role         Rol      @default(USER)
  cursos       Curso[]  // Relaci贸n con cursos
  
  // Relaciones
  partidasJugador1 Partida[] @relation("PartidaJugador1")
  partidasJugador2 Partida[] @relation("PartidaJugador2")
  salaUsuario1 Salavirtual[] @relation("SalaUsuario1")
  salaUsuario2 Salavirtual[] @relation("SalaUsuario2")
}

model Curso {
  id      Int      @id @default(autoincrement())
  nombre  String   // Curso A o B o C
  grado   Int
  usuarios User[]  // Usuarios que pertenecen al curso
}

model Region {
  id       Int      @id @default(autoincrement())
  nombre   String
  ciudades  Ciudad[]


  usuarios User[]
}

model Ciudad {
  id       Int      @id @default(autoincrement())
  nombre   String
  regionId Int
  region   Region   @relation(fields: [regionId], references: [id])


  usuarios User[]
}
enum Rol {
  USER
  PROFESOR
  ADMIN
}

